Terminals unused in grammar

    DO
    BREAK
    CHAR
    DOUBLE
    CONTINUE
    SWITCH
    CASE
    DEFAULT
    BITOP
    CONST_CHAR
    SINGLE_LINE_STRING
    MULTI_LINE_STRING


State 45 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 $@1: ε

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON

    9 $@2: ε

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 SEMICOLON

   11 $@3: ε

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement

   13 $@4: ε

   14 func_definition: type_specifier ID LPAREN RPAREN $@4 compound_statement

   15 parameter_list: parameter_list COMMA type_specifier ID
   16               | parameter_list COMMA type_specifier
   17               | type_specifier ID
   18               | type_specifier

   19 $@5: ε

   20 compound_statement: LCURL $@5 statements RCURL

   21 $@6: ε

   22 compound_statement: LCURL $@6 RCURL

   23 var_declaration: type_specifier declaration_list SEMICOLON

   24 type_specifier: INT
   25               | FLOAT
   26               | VOID

   27 declaration_list: declaration_list COMMA ID
   28                 | declaration_list COMMA ID LSQUARE CONST_INT RSQUARE
   29                 | ID
   30                 | ID LSQUARE CONST_INT RSQUARE

   31 statements: statement
   32           | statements statement

   33 statement: var_declaration
   34          | expression_statement
   35          | compound_statement
   36          | FOR LPAREN expression statement expression statement expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement
   38          | IF LPAREN expression RPAREN statement ELSE statement
   39          | WHILE LPAREN expression RPAREN statement
   40          | PRINTLN LPAREN ID RPAREN SEMICOLON
   41          | RETURN expression SEMICOLON

   42 expression_statement: SEMICOLON
   43                     | expression SEMICOLON

   44 variable: ID
   45         | ID LSQUARE expression RSQUARE

   46 expression: logic_expression
   47           | variable ASSIGNOP logic_expression

   48 logic_expression: rel_expression
   49                 | rel_expression LOGICOP rel_expression

   50 rel_expression: simple_expression
   51               | simple_expression RELOP simple_expression

   52 simple_expression: term
   53                  | simple_expression ADDOP term

   54 term: unary_expression
   55     | term MULOP unary_expression

   56 unary_expression: ADDOP unary_expression
   57                 | NOT unary_expression
   58                 | factor

   59 factor: variable

   60 $@7: ε

   61 factor: ID LPAREN $@7 argument_list RPAREN
   62       | LPAREN expression RPAREN
   63       | CONST_INT
   64       | CONST_FLOAT
   65       | variable INCOP
   66       | variable DECOP

   67 argument_list: arguments
   68              | ε

   69 arguments: arguments COMMA logic_expression
   70          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADDOP <symbol> (258) 53 56
    MULOP <symbol> (259) 55
    INCOP <symbol> (260) 65
    RELOP <symbol> (261) 51
    ID <symbol> (262) 8 10 12 14 15 17 27 28 29 30 40 44 45 61
    CONST_INT <symbol> (263) 28 30 63
    CONST_FLOAT <symbol> (264) 64
    IF <symbol> (265) 37 38
    ELSE <symbol> (266) 38
    FOR <symbol> (267) 36
    WHILE <symbol> (268) 39
    DO <symbol> (269)
    BREAK <symbol> (270)
    CHAR <symbol> (271)
    FLOAT <symbol> (272) 25
    DOUBLE <symbol> (273)
    VOID <symbol> (274) 26
    RETURN <symbol> (275) 41
    CONTINUE <symbol> (276)
    PRINTLN <symbol> (277) 40
    ASSIGNOP <symbol> (278) 47
    LOGICOP <symbol> (279) 49
    NOT <symbol> (280) 57
    LPAREN <symbol> (281) 8 10 12 14 36 37 38 39 40 61 62
    RPAREN <symbol> (282) 8 10 12 14 36 37 38 39 40 61 62
    LCURL <symbol> (283) 20 22
    RCURL <symbol> (284) 20 22
    LSQUARE <symbol> (285) 28 30 45
    RSQUARE <symbol> (286) 28 30 45
    COMMA <symbol> (287) 15 16 27 28 69
    SEMICOLON <symbol> (288) 8 10 23 40 41 42 43
    DECOP <symbol> (289) 66
    INT <symbol> (290) 24
    SWITCH <symbol> (291)
    CASE <symbol> (292)
    DEFAULT <symbol> (293)
    BITOP <symbol> (294)
    CONST_CHAR <symbol> (295)
    SINGLE_LINE_STRING <symbol> (296)
    MULTI_LINE_STRING <symbol> (297)
    LOWER_THAN_ELSE (298)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    start <symbol> (45)
        on left: 1
        on right: 0
    program <symbol> (46)
        on left: 2 3
        on right: 1 2
    unit <symbol> (47)
        on left: 4 5 6
        on right: 2 3
    func_declaration <symbol> (48)
        on left: 8 10
        on right: 5
    $@1 (49)
        on left: 7
        on right: 8
    $@2 (50)
        on left: 9
        on right: 10
    func_definition <symbol> (51)
        on left: 12 14
        on right: 6
    $@3 (52)
        on left: 11
        on right: 12
    $@4 (53)
        on left: 13
        on right: 14
    parameter_list <symbol> (54)
        on left: 15 16 17 18
        on right: 8 12 15 16
    compound_statement <symbol> (55)
        on left: 20 22
        on right: 12 14 35
    $@5 (56)
        on left: 19
        on right: 20
    $@6 (57)
        on left: 21
        on right: 22
    var_declaration <symbol> (58)
        on left: 23
        on right: 4 33
    type_specifier <symbol> (59)
        on left: 24 25 26
        on right: 8 10 12 14 15 16 17 18 23
    declaration_list <symbol> (60)
        on left: 27 28 29 30
        on right: 23 27 28
    statements <symbol> (61)
        on left: 31 32
        on right: 20 32
    statement <symbol> (62)
        on left: 33 34 35 36 37 38 39 40 41
        on right: 31 32 36 37 38 39
    expression_statement <symbol> (63)
        on left: 42 43
        on right: 34
    variable <symbol> (64)
        on left: 44 45
        on right: 47 59 65 66
    expression <symbol> (65)
        on left: 46 47
        on right: 36 37 38 39 41 43 45 62
    logic_expression <symbol> (66)
        on left: 48 49
        on right: 46 47 69 70
    rel_expression <symbol> (67)
        on left: 50 51
        on right: 48 49
    simple_expression <symbol> (68)
        on left: 52 53
        on right: 50 51 53
    term <symbol> (69)
        on left: 54 55
        on right: 52 53 55
    unary_expression <symbol> (70)
        on left: 56 57 58
        on right: 54 55 56 57
    factor <symbol> (71)
        on left: 59 61 62 63 64 65 66
        on right: 58
    $@7 (72)
        on left: 60
        on right: 61
    argument_list <symbol> (73)
        on left: 67 68
        on right: 61
    arguments <symbol> (74)
        on left: 69 70
        on right: 67 69


State 0

    0 $accept: • start $end

    FLOAT  shift, and go to state 1
    VOID   shift, and go to state 2
    INT    shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   25 type_specifier: FLOAT •

    $default  reduce using rule 25 (type_specifier)


State 2

   26 type_specifier: VOID •

    $default  reduce using rule 26 (type_specifier)


State 3

   24 type_specifier: INT •

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start • $end

    $end  shift, and go to state 11


State 5

    1 start: program •
    2 program: program • unit

    FLOAT  shift, and go to state 1
    VOID   shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit •

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration •

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition •

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration •

    $default  reduce using rule 4 (unit)


State 10

    8 func_declaration: type_specifier • ID LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier • ID LPAREN RPAREN $@2 SEMICOLON
   12 func_definition: type_specifier • ID LPAREN parameter_list RPAREN $@3 compound_statement
   14                | type_specifier • ID LPAREN RPAREN $@4 compound_statement
   23 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end •

    $default  accept


State 12

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 13

    8 func_declaration: type_specifier ID • LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID • LPAREN RPAREN $@2 SEMICOLON
   12 func_definition: type_specifier ID • LPAREN parameter_list RPAREN $@3 compound_statement
   14                | type_specifier ID • LPAREN RPAREN $@4 compound_statement
   29 declaration_list: ID •
   30                 | ID • LSQUARE CONST_INT RSQUARE

    LPAREN   shift, and go to state 15
    LSQUARE  shift, and go to state 16

    $default  reduce using rule 29 (declaration_list)


State 14

   23 var_declaration: type_specifier declaration_list • SEMICOLON
   27 declaration_list: declaration_list • COMMA ID
   28                 | declaration_list • COMMA ID LSQUARE CONST_INT RSQUARE

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    8 func_declaration: type_specifier ID LPAREN • parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID LPAREN • RPAREN $@2 SEMICOLON
   12 func_definition: type_specifier ID LPAREN • parameter_list RPAREN $@3 compound_statement
   14                | type_specifier ID LPAREN • RPAREN $@4 compound_statement

    FLOAT   shift, and go to state 1
    VOID    shift, and go to state 2
    RPAREN  shift, and go to state 19
    INT     shift, and go to state 3

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   30 declaration_list: ID LSQUARE • CONST_INT RSQUARE

    CONST_INT  shift, and go to state 22


State 17

   27 declaration_list: declaration_list COMMA • ID
   28                 | declaration_list COMMA • ID LSQUARE CONST_INT RSQUARE

    ID  shift, and go to state 23


State 18

   23 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 23 (var_declaration)


State 19

   10 func_declaration: type_specifier ID LPAREN RPAREN • $@2 SEMICOLON
   14 func_definition: type_specifier ID LPAREN RPAREN • $@4 compound_statement

    LCURL     reduce using rule 13 ($@4)
    $default  reduce using rule 9 ($@2)

    $@2  go to state 24
    $@4  go to state 25


State 20

    8 func_declaration: type_specifier ID LPAREN parameter_list • RPAREN $@1 SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list • RPAREN $@3 compound_statement
   15 parameter_list: parameter_list • COMMA type_specifier ID
   16               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 21

   17 parameter_list: type_specifier • ID
   18               | type_specifier •

    ID  shift, and go to state 28

    $default  reduce using rule 18 (parameter_list)


State 22

   30 declaration_list: ID LSQUARE CONST_INT • RSQUARE

    RSQUARE  shift, and go to state 29


State 23

   27 declaration_list: declaration_list COMMA ID •
   28                 | declaration_list COMMA ID • LSQUARE CONST_INT RSQUARE

    LSQUARE  shift, and go to state 30

    $default  reduce using rule 27 (declaration_list)


State 24

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 • SEMICOLON

    SEMICOLON  shift, and go to state 31


State 25

   14 func_definition: type_specifier ID LPAREN RPAREN $@4 • compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 33


State 26

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN • $@1 SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN • $@3 compound_statement

    LCURL     reduce using rule 11 ($@3)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 34
    $@3  go to state 35


State 27

   15 parameter_list: parameter_list COMMA • type_specifier ID
   16               | parameter_list COMMA • type_specifier

    FLOAT  shift, and go to state 1
    VOID   shift, and go to state 2
    INT    shift, and go to state 3

    type_specifier  go to state 36


State 28

   17 parameter_list: type_specifier ID •

    $default  reduce using rule 17 (parameter_list)


State 29

   30 declaration_list: ID LSQUARE CONST_INT RSQUARE •

    $default  reduce using rule 30 (declaration_list)


State 30

   28 declaration_list: declaration_list COMMA ID LSQUARE • CONST_INT RSQUARE

    CONST_INT  shift, and go to state 37


State 31

   10 func_declaration: type_specifier ID LPAREN RPAREN $@2 SEMICOLON •

    $default  reduce using rule 10 (func_declaration)


State 32

   20 compound_statement: LCURL • $@5 statements RCURL
   22                   | LCURL • $@6 RCURL

    RCURL     reduce using rule 21 ($@6)
    $default  reduce using rule 19 ($@5)

    $@5  go to state 38
    $@6  go to state 39


State 33

   14 func_definition: type_specifier ID LPAREN RPAREN $@4 compound_statement •

    $default  reduce using rule 14 (func_definition)


State 34

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 35

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 • compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 41


State 36

   15 parameter_list: parameter_list COMMA type_specifier • ID
   16               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 42

    $default  reduce using rule 16 (parameter_list)


State 37

   28 declaration_list: declaration_list COMMA ID LSQUARE CONST_INT • RSQUARE

    RSQUARE  shift, and go to state 43


State 38

   20 compound_statement: LCURL $@5 • statements RCURL

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statements            go to state 59
    statement             go to state 60
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 39

   22 compound_statement: LCURL $@6 • RCURL

    RCURL  shift, and go to state 70


State 40

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON •

    $default  reduce using rule 8 (func_declaration)


State 41

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement •

    $default  reduce using rule 12 (func_definition)


State 42

   15 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 15 (parameter_list)


State 43

   28 declaration_list: declaration_list COMMA ID LSQUARE CONST_INT RSQUARE •

    $default  reduce using rule 28 (declaration_list)


State 44

   56 unary_expression: ADDOP • unary_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 71
    unary_expression  go to state 72
    factor            go to state 69


State 45

   44 variable: ID •
   45         | ID • LSQUARE expression RSQUARE
   61 factor: ID • LPAREN $@7 argument_list RPAREN

    LPAREN   shift, and go to state 73
    LSQUARE  shift, and go to state 74

    LPAREN    [reduce using rule 44 (variable)]
    $default  reduce using rule 44 (variable)


State 46

   63 factor: CONST_INT •

    $default  reduce using rule 63 (factor)


State 47

   64 factor: CONST_FLOAT •

    $default  reduce using rule 64 (factor)


State 48

   37 statement: IF • LPAREN expression RPAREN statement
   38          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 75


State 49

   36 statement: FOR • LPAREN expression statement expression statement expression RPAREN statement

    LPAREN  shift, and go to state 76


State 50

   39 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 77


State 51

   41 statement: RETURN • expression SEMICOLON

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 78
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 52

   40 statement: PRINTLN • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 79


State 53

   57 unary_expression: NOT • unary_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 71
    unary_expression  go to state 80
    factor            go to state 69


State 54

   62 factor: LPAREN • expression RPAREN

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 81
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 55

   42 expression_statement: SEMICOLON •

    $default  reduce using rule 42 (expression_statement)


State 56

   35 statement: compound_statement •

    $default  reduce using rule 35 (statement)


State 57

   33 statement: var_declaration •

    $default  reduce using rule 33 (statement)


State 58

   23 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 82

    declaration_list  go to state 14


State 59

   20 compound_statement: LCURL $@5 statements • RCURL
   32 statements: statements • statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 83
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 84
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 60

   31 statements: statement •

    $default  reduce using rule 31 (statements)


State 61

   34 statement: expression_statement •

    $default  reduce using rule 34 (statement)


State 62

   47 expression: variable • ASSIGNOP logic_expression
   59 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    INCOP     shift, and go to state 85
    ASSIGNOP  shift, and go to state 86
    DECOP     shift, and go to state 87

    $default  reduce using rule 59 (factor)


State 63

   43 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 64

   46 expression: logic_expression •

    $default  reduce using rule 46 (expression)


State 65

   48 logic_expression: rel_expression •
   49                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 89

    $default  reduce using rule 48 (logic_expression)


State 66

   50 rel_expression: simple_expression •
   51               | simple_expression • RELOP simple_expression
   53 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 90
    RELOP  shift, and go to state 91

    ADDOP     [reduce using rule 50 (rel_expression)]
    $default  reduce using rule 50 (rel_expression)


State 67

   52 simple_expression: term •
   55 term: term • MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 52 (simple_expression)


State 68

   54 term: unary_expression •

    $default  reduce using rule 54 (term)


State 69

   58 unary_expression: factor •

    $default  reduce using rule 58 (unary_expression)


State 70

   22 compound_statement: LCURL $@6 RCURL •

    $default  reduce using rule 22 (compound_statement)


State 71

   59 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    INCOP  shift, and go to state 85
    DECOP  shift, and go to state 87

    $default  reduce using rule 59 (factor)


State 72

   56 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 56 (unary_expression)


State 73

   61 factor: ID LPAREN • $@7 argument_list RPAREN

    $default  reduce using rule 60 ($@7)

    $@7  go to state 93


State 74

   45 variable: ID LSQUARE • expression RSQUARE

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 94
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 75

   37 statement: IF LPAREN • expression RPAREN statement
   38          | IF LPAREN • expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 95
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 76

   36 statement: FOR LPAREN • expression statement expression statement expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 96
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 77

   39 statement: WHILE LPAREN • expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 97
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 78

   41 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 98


State 79

   40 statement: PRINTLN LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 99


State 80

   57 unary_expression: NOT unary_expression •

    $default  reduce using rule 57 (unary_expression)


State 81

   62 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 100


State 82

   29 declaration_list: ID •
   30                 | ID • LSQUARE CONST_INT RSQUARE

    LSQUARE  shift, and go to state 16

    $default  reduce using rule 29 (declaration_list)


State 83

   20 compound_statement: LCURL $@5 statements RCURL •

    $default  reduce using rule 20 (compound_statement)


State 84

   32 statements: statements statement •

    $default  reduce using rule 32 (statements)


State 85

   65 factor: variable INCOP •

    $default  reduce using rule 65 (factor)


State 86

   47 expression: variable ASSIGNOP • logic_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 71
    logic_expression   go to state 101
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 87

   66 factor: variable DECOP •

    $default  reduce using rule 66 (factor)


State 88

   43 expression_statement: expression SEMICOLON •

    $default  reduce using rule 43 (expression_statement)


State 89

   49 logic_expression: rel_expression LOGICOP • rel_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 71
    rel_expression     go to state 102
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 90

   53 simple_expression: simple_expression ADDOP • term

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 71
    term              go to state 103
    unary_expression  go to state 68
    factor            go to state 69


State 91

   51 rel_expression: simple_expression RELOP • simple_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 71
    simple_expression  go to state 104
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 92

   55 term: term MULOP • unary_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable          go to state 71
    unary_expression  go to state 105
    factor            go to state 69


State 93

   61 factor: ID LPAREN $@7 • argument_list RPAREN

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    $default  reduce using rule 68 (argument_list)

    variable           go to state 71
    logic_expression   go to state 106
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69
    argument_list      go to state 107
    arguments          go to state 108


State 94

   45 variable: ID LSQUARE expression • RSQUARE

    RSQUARE  shift, and go to state 109


State 95

   37 statement: IF LPAREN expression • RPAREN statement
   38          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 110


State 96

   36 statement: FOR LPAREN expression • statement expression statement expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 111
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 97

   39 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 112


State 98

   41 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 41 (statement)


State 99

   40 statement: PRINTLN LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 113


State 100

   62 factor: LPAREN expression RPAREN •

    $default  reduce using rule 62 (factor)


State 101

   47 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 47 (expression)


State 102

   49 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 49 (logic_expression)


State 103

   53 simple_expression: simple_expression ADDOP term •
   55 term: term • MULOP unary_expression

    MULOP  shift, and go to state 92

    $default  reduce using rule 53 (simple_expression)


State 104

   51 rel_expression: simple_expression RELOP simple_expression •
   53 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 90

    ADDOP     [reduce using rule 51 (rel_expression)]
    $default  reduce using rule 51 (rel_expression)


State 105

   55 term: term MULOP unary_expression •

    $default  reduce using rule 55 (term)


State 106

   70 arguments: logic_expression •

    $default  reduce using rule 70 (arguments)


State 107

   61 factor: ID LPAREN $@7 argument_list • RPAREN

    RPAREN  shift, and go to state 114


State 108

   67 argument_list: arguments •
   69 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 115

    $default  reduce using rule 67 (argument_list)


State 109

   45 variable: ID LSQUARE expression RSQUARE •

    $default  reduce using rule 45 (variable)


State 110

   37 statement: IF LPAREN expression RPAREN • statement
   38          | IF LPAREN expression RPAREN • statement ELSE statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 116
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 111

   36 statement: FOR LPAREN expression statement • expression statement expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 117
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 112

   39 statement: WHILE LPAREN expression RPAREN • statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 118
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 113

   40 statement: PRINTLN LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 114

   61 factor: ID LPAREN $@7 argument_list RPAREN •

    $default  reduce using rule 61 (factor)


State 115

   69 arguments: arguments COMMA • logic_expression

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 71
    logic_expression   go to state 120
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 116

   37 statement: IF LPAREN expression RPAREN statement •
   38          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 37 (statement)


State 117

   36 statement: FOR LPAREN expression statement expression • statement expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 122
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 118

   39 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 39 (statement)


State 119

   40 statement: PRINTLN LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 40 (statement)


State 120

   69 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 69 (arguments)


State 121

   38 statement: IF LPAREN expression RPAREN statement ELSE • statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 123
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 122

   36 statement: FOR LPAREN expression statement expression statement • expression RPAREN statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54

    variable           go to state 62
    expression         go to state 124
    logic_expression   go to state 64
    rel_expression     go to state 65
    simple_expression  go to state 66
    term               go to state 67
    unary_expression   go to state 68
    factor             go to state 69


State 123

   38 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 38 (statement)


State 124

   36 statement: FOR LPAREN expression statement expression statement expression • RPAREN statement

    RPAREN  shift, and go to state 125


State 125

   36 statement: FOR LPAREN expression statement expression statement expression RPAREN • statement

    ADDOP        shift, and go to state 44
    ID           shift, and go to state 45
    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    IF           shift, and go to state 48
    FOR          shift, and go to state 49
    WHILE        shift, and go to state 50
    FLOAT        shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 51
    PRINTLN      shift, and go to state 52
    NOT          shift, and go to state 53
    LPAREN       shift, and go to state 54
    LCURL        shift, and go to state 32
    SEMICOLON    shift, and go to state 55
    INT          shift, and go to state 3

    compound_statement    go to state 56
    var_declaration       go to state 57
    type_specifier        go to state 58
    statement             go to state 126
    expression_statement  go to state 61
    variable              go to state 62
    expression            go to state 63
    logic_expression      go to state 64
    rel_expression        go to state 65
    simple_expression     go to state 66
    term                  go to state 67
    unary_expression      go to state 68
    factor                go to state 69


State 126

   36 statement: FOR LPAREN expression statement expression statement expression RPAREN statement •

    $default  reduce using rule 36 (statement)
